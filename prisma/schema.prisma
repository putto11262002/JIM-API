generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STAFF_ROOT
  STAFF_ADMIN
  STAFF_GENERAL
}

model Staff {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  username  String    @unique
  password  String
  role      StaffRole
  logout    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum StaffRole {
  STAFF_ADMIN
 STAFF_GENERAL
  STAFF_ROOT
}

enum ModelApplicationStatus {
  PENDING
  ACCEPTED
  ARCHIVED
}

model ModelApplicationExperience {
  id            String           @id @default(uuid())
  applicationId String
  application   ModelApplication @relation(fields: [applicationId], references: [id])
  year          String
  media         String
  country       String
  product       String
  details       String?
}

model ModelApplicationImage {
  fileId    String @id() 
  type          String
  caption       String?
  url           String
  // height        Int
  // width         Int
  application   ModelApplication @relation(fields: [applicationId], references: [id])
  applicationId String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model ModelApplication {
  id            String                       @id @default(uuid())
  firstName     String
  lastName      String
  phoneNumber   String
  email         String
  lineId        String?
  weChat        String?
  facebook      String?
  instagram     String?
  whatsapp      String?
  dateOfBirth   DateTime
  gender        String
  nationality   String
  ethnicity     String
  address       String
  city          String
  region        String
  zipCode       String
  country       String
  experiences   ModelApplicationExperience[]
  talents       String[]
  aboutMe       String?
  height        String
  weight        String
  bust          String
  hips          String
  suitDressSize String
  shoeSize      String
  eyeColor      String
  hairColor     String
  images        ModelApplicationImage[]
  status        ModelApplicationStatus       @default(PENDING)
  createdAt     DateTime                     @default(now())
  updatedAt     DateTime                     @updatedAt
}

model ModelImage {
  id        String   @id @default(uuid())
  caption   String?
  type      String
  url       String
  fileId String
  // height    Int
  // width     Int
  model     Model    @relation(fields: [modelId], references: [id])
  modelId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ModelMeasurement {
  modelId            String  @id
  model              Model   @relation(fields: [modelId], references: [id])
  height             String
  weight             String
  bust               String?
  collar             String?
  aroundArmpit       String?
  aroundArmToWrist1  String?
  aroundArmToWrist2  String?
  aroundArmToWrist3  String?
  armLength1         String?
  armLength2         String?
  aroundThickToAnkle String?
  trousersLength     String?
  chestHeight        String?
  chestWidth         String?
  waist              String?
  hips               String?
  shoulder           String?
  frontShoulder      String?
  frontLength        String?
  backShoulder       String?
  backLength         String?
  crotch             String?
  braSize            String?
  suitDressSize      String?
  shoeSize           String?
  hairColor          String?
  eyeColor           String?
}

model ModelExperience {
  id      String @id @default(uuid())
  modelId String
  model   Model  @relation(fields: [modelId], references: [id])
  year    String
  media   String
  country String
  product String
  details String?
}

model Model {
  id                           String            @id @default(uuid())
  firstName                    String
  lastName                     String
  nickname                     String?
  phoneNumber                  String
  email                        String
  lineId                       String?
  whatsapp                     String?
  wechat                       String?
  instagram                    String?
  facebook                     String?
  dateOfBirth                  DateTime
  gender                       String
  nationality                  String?
  ethnicity                    String?
  countryOfResidence           String?
  spokenLanguages               String[]
  passportNumber                  String?
  idCardNumber                  String?
  taxId                        String?
  occupation                   String?
  highestLevelOfEducation      String?
  address                      String?
  city                         String?
  region                       String?
  zipCode                      String?
  country                      String?
  experiences                  ModelExperience[]
  talents                      String[]
  aboutMe                      String?
  medicalBackground            String?
  tattoos                      String?
  scars                        String?
  underwareShooting            Boolean?
  inTown                       Boolean           @default(false)
  emergencyContactName         String?
  emergencyContactPhoneNumber  String?
  emergencyContactRelationship String?
  images                       ModelImage[]
  measurement             ModelMeasurement?
  createdAt                    DateTime          @default(now())
  updatedAt                    DateTime          @updatedAt
}

model Job {
  id String @id @default(uuid())
}

model Option {
  id String @id @default(uuid())
}


model FileMetaData {
  id        String   @id @default(uuid())
  path String
  url String
  mimeType String
  size Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
